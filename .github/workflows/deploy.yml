name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      APP_ROOT: /data01/virt133730/domeenid/www.catshelp.ee

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v3

      - name: 📦 Install dependencies
        run: npm install

      - name: 🏗️ Build frontend & backend
        env:
          VITE_BACKEND_URL: ${{ vars.VITE_BACKEND_URL }}       # notice 'vars' keyword here
          VITE_FRONTEND_URL: ${{ vars.VITE_FRONTEND_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ vars.VITE_GOOGLE_CLIENT_ID }}
          NODE_ENV: "production"
        run: npm run build

      - name: 🛠️ Primsa generate
        run: npm run copy:prisma

      - name: 📁 Prepare release archive
        run: |
          RELEASE_NAME=catshelp
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          tar -czf $RELEASE_NAME.tar.gz dist

      - name: 📤 Upload release to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.CATSHELP_SSH_KEY }}
          port: 22
          source: "${{ env.RELEASE_NAME }}.tar.gz"
          target: "${{ env.APP_ROOT }}/liides"

      - name: 🚀 Deploy and restart via PM2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.CATSHELP_SSH_KEY }}
          port: 22
          script: |
            set -e

            cd ${{ env.APP_ROOT }}/liides
            tar -xzf ${{ env.RELEASE_NAME }}.tar.gz
            rm ${{ env.RELEASE_NAME }}.tar.gz

            source load-env.sh
            cd dist/
            pm2 startOrRestart ${{ env.APP_ROOT }}/liides/pm2.config.js

            echo "✅ Deployed ${{ env.RELEASE_NAME }} successfully"
