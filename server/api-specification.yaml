openapi: 3.0.0
info:
  title: CatsHelp API
  description: API documentation for the CatsHelp backend, a pet management and rescue system.
  version: 1.0.0
servers:
  - url: http://{host}:{port}/api
    variables:
      host:
        default: localhost
        description: The host where the API is running
      port:
        default: "8080"
        description: The port where the API is running
paths:
  /login-google:
    post:
      summary: Authenticate user via Google OAuth
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credential:
                  type: string
                  description: Google ID token
                clientId:
                  type: string
                  description: Google client ID
              required:
                - credential
                - clientId
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated user
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /login-email:
    post:
      summary: Authenticate user via email
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User email address
              required:
                - email
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated user
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /verify:
    get:
      summary: Verify user token
      tags:
        - Authentication
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: JWT token to verify
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Indicates if the token is valid
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /logout:
    post:
      summary: Logout user
      tags:
        - Authentication
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
  /user:
    get:
      summary: Retrieve user data
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User ID
                  email:
                    type: string
                    description: User email
                  name:
                    type: string
                    description: User name
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /animals/dashboard:
    get:
      summary: Fetch dashboard data for pets
      tags:
        - Animals
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Pet name
                    image:
                      type: string
                      description: URL or path to pet image
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /animals/cat-profile:
    get:
      summary: Retrieve cat profile data
      tags:
        - Animals
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: catId
          schema:
            type: string
          required: false
          description: ID of the cat to retrieve profile for
      responses:
        '200':
          description: Cat profile data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Cat ID
                  name:
                    type: string
                    description: Cat name
                  details:
                    type: object
                    description: Additional cat profile details
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        '404':
          description: Cat profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Authentication
    description: Endpoints related to user authentication
  - name: User
    description: Endpoints related to user data
  - name: Animals
    description: Endpoints related to pet and animal data
